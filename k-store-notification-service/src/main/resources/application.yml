server:
  port: 8085

spring:
  application:
    name: k-store-notification-service
  
# Notification settings
notification:
  firebase:
    config-file: firebase-service-account.json
    database-url: ${FIREBASE_DATABASE_URL:}
  
  # Notification settings
  default:
    max-attempts: 3
    retry-delay-minutes: 5
  
  # Rate limiting
  rate-limit:
    email: 100 # per minute
    sms: 50 # per minute
    push: 200 # per minute

  # Kafka topics
  kafka:
    topics:
      notification-events: notification-events
      bulk-notification-events: bulk-notification-events
      user-events: user-events
      order-events: order-events
      payment-events: payment-events
      product-events: product-events   url: jdbc:postgresql://localhost:5432/k_store_notifications
    username: kstore_user
    password: kstore123
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

  # Kafka configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: com.kstore.notification.dto.NotificationRequest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
    listener:
      ack-mode: manual_immediate

  # Email configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SMTP_USERNAME:your-email@gmail.com}
    password: ${SMTP_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# AWS Configuration
aws:
  region: ${AWS_REGION:us-east-1}
  accessKeyId: ${AWS_ACCESS_KEY_ID:}
  secretKey: ${AWS_SECRET_ACCESS_KEY:}
  sns:
    sms:
      sender-id: K-Store

# Firebase Configuration
notification:
  firebase:
    config-file: firebase-service-account.json
    database-url: ${FIREBASE_DATABASE_URL:}
  
  # Notification settings
  default:
    max-attempts: 3
    retry-delay-minutes: 5
  
  # Rate limiting
  rate-limit:
    email: 100 # per minute
    sms: 50 # per minute
    push: 200 # per minute

logging:
  level:
    com.kstore.notification: DEBUG
    org.springframework.mail: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/notification-service.log
